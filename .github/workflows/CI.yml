name: CI

on:
  push:
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    paths-ignore:
      - "**.md"
      - "LICENSE"

jobs:
  amd64_linux_clang:
    runs-on: ubuntu-latest
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Dependencies
        run: sudo apt install -y make clang
      - run: clang --version
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target test ARGS="-V"
  amd64_linux_gcc:
    runs-on: ubuntu-latest
    env:
      CC: gcc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Dependencies
        run: sudo apt install -y make gcc
      - run: gcc --version
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target test ARGS="-V"
  amd64_macos_clang:
    runs-on: macos-latest
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: cc --version
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target test ARGS="-V"
  amd64_macos_gcc:
    runs-on: macos-latest
    env:
      CC: gcc-11
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Dependencies
        run: brew install gcc@11
      - run: gcc-11 --version
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake ..
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target test ARGS="-V"
  amd64_windows_clang:
    runs-on: windows-2019
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - run: echo "C:\\msys64\\usr\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install Dependencies
        run: |
          pacman --version
          pacman -Sy
          pacman --noconfirm -S pacman-mirrors
          pacman --noconfirm -S mingw-w64-x86_64-clang-tools-extra mingw64/mingw-w64-x86_64-clang
          echo "C:\\msys64\\mingw64\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - run: clang --version
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake .. -G "MinGW Makefiles"
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target test ARGS="-V"
  amd64_windows_gcc:
    runs-on: windows-2019
    env:
      CC: gcc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Dependencies
        run: echo "C:\\msys64\\usr\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - run: gcc --version
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake .. -G "MinGW Makefiles"
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target test ARGS="-V"
  amd64_windows_vs2019:
    runs-on: windows-2019
    env:
      CTEST_OUTPUT_ON_FAILURE: TRUE
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install Dependencies
        run: echo "C:\\msys64\\usr\\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Build libfs
        run: |
          mkdir -p build
          cd build
          cmake .. -G "Visual Studio 16 2019"
          cmake --build .
      - name: Test libfs
        run: |
          cd build
          cmake --build . --target RUN_TESTS -v
  html:
    runs-on: ubuntu-latest
    steps:
      - uses: mymindstorm/setup-emsdk@v7
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build libfs
        run: |
          npm i
          npm run build
          mkdir -p build
          cd build
          emcmake cmake ..
          cmake --build .
      - name: Test libfs
        run: |
          npm run test
